set(CFG_BUILD_CORE 1)
set(CFG_BUILD_CODECS 1)
set(CFG_BUILD_JPG 1)
IF(${SMEDIA_PLATFORM} STREQUAL win32)
    set(CFG_BUILD_USB2SPI 1)
ELSEIF(${SMEDIA_PLATFORM} STREQUAL freertos)
    IF(${CONFIG_HAVE_NTFS})
        set(CFG_BUILD_SXA 1)
        #ADD_SUBDIRECTORY(driver/sxa/ntfs-3g)
        #ADD_SUBDIRECTORY(driver/sxa/blkdev/usb)
    ENDIF()
    set(CFG_BUILD_I2S 1)
    set(CFG_BUILD_TIMER 1)
    set(CFG_BUILD_AUD 1)
    set(CFG_BUILD_INTR 1)
    #ADD_SUBDIRECTORY(codecs)
ENDIF()

#VGA / YPbPr
IF(${COMPONENT_DEV} STREQUAL ENABLE)
    set(CFG_BUILD_CAT9883 1)
ENDIF()

#CVBS / S-Video
IF(${COMPOSITE_DEV} STREQUAL ENABLE)
    set(CFG_BUILD_ADV7180 1)
ENDIF()

#hdmi loopthrough
IF(${HDMI_LOOPTHROUGH} STREQUAL ENABLE)
    set(CFG_BUILD_HDMITX 1)
ENDIF()

#Sensor
IF(${SENSOR_DEV} STREQUAL ENABLE)
    set(CFG_BUILD_SENSOR 1)
ENDIF()

set(CFG_BUILD_HDMIRX 1)
set(CFG_BUILD_SPI 1)
set(CFG_BUILD_MMP 1)
set(CFG_BUILD_TSI 1)
set(CFG_BUILD_TSO 1)
set(CFG_BUILD_DMA 1)
set(CFG_BUILD_SD 1)
set(CFG_BUILD_USB 1)
set(CFG_BUILD_MSC 1)
set(CFG_BUILD_IR 1)
set(CFG_BUILD_IIC 1)
set(CFG_BUILD_ISP 1)
set(CFG_BUILD_MODULATOR 1)
set(CFG_BUILD_RTC 1)
set(CFG_BUILD_EXRTC 1)
set(CFG_BUILD_NOR 1)
set(CFG_BUILD_UART 1)
set(CFG_BUILD_SPDIF 1)
set(CFG_BUILD_DPU 1)
set(CFG_BUILD_DECOMPRESS 1)
set(CFG_BUILD_WATCHDOG 1)
set(CFG_BUILD_ENCODER 1)
set(CFG_BUILD_CAPTURE 1)

# Share Library
IF(${SYSTEM_FAT_TYPE} STREQUAL HAVE_FAT)
    set(CFG_BUILD_FAT 1)
ENDIF()
set(CFG_BUILD_POLARSSL 1)

SET(SMEDIA_DEFS
    -D__OR32__
    -D__FREERTOS__
    -DMM9910
    -DCFG_OSC_CLK=12000000
    -DIDLE_TASK
    -DRTOS_USE_ISR
    -DMEMORY_SIZE=64M
    -DENABLE_CODECS_PLUGIN
    -DCUSTOMER_CODE=${CUSTOMER_CODE}
    -DPROJECT_CODE=${PROJECT_CODE}
    -DSDK_MAJOR_VERSION=${SDK_MAJOR_VERSION}
    -DSDK_MINOR_VERSION=${SDK_MINOR_VERSION}
    -DBUILD_NUMBER=${BUILD_NUMBER}
    -DBOOT_LOADER
)

IF(${CONFIG_HAVE_NTFS})
    SET(SMEDIA_DEFS
        ${SMEDIA_DEFS}
        -DCONFIG_HAVE_NTFS=1
    )
ENDIF()

# avoid build warning
SET(CMAKE_TOOLCHAIN_FILE ${CMAKE_TOOLCHAIN_FILE})

SET(JEDI_ROM_INIT_SCRIPT "IT9919_A1_Initial_DDR2_Mem_notiling_440MHZ.scr")

SET(SMEDIA_INC_DIRS
    ${PROJECT_SOURCE_DIR}/${SMEDIA_PLATFORM}/include/or32
    ${PROJECT_SOURCE_DIR}/${SMEDIA_PLATFORM}/include/freertos
    ${PROJECT_SOURCE_DIR}/sdk/include
    ${PROJECT_SOURCE_DIR}/sdk/share/fat
    ${PROJECT_SOURCE_DIR}/sdk/share/fat/common
    ${PROJECT_SOURCE_DIR}/project/${PROJECT_TYPE}/.repos
)

ADD_DEFINITIONS(${SMEDIA_DEFS})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)
SET(CMAKE_C_FLAGS_DEBUG "-g -mcmov -DDEBUG -mhard-div -fno-short-enums -gstabs")
SET(CMAKE_C_FLAGS_RELEASE "-g3 -Os -mcmov -DNDEBUG -mhard-div -fno-short-enums -gstabs")
SET(CMAKE_CXX_FLAGS_DEBUG "-g -mcmov -DDEBUG -mhard-div -fno-short-enums -gstabs")
SET(CMAKE_CXX_FLAGS_RELEASE "-g3 -Os -mcmov -DNDEBUG -mhard-div -fno-short-enums -gstabs")

SET(CMAKE_EXE_LINKER_FLAGS "-nostartfiles -T${LIBRARY_OUTPUT_PATH}/default.ld -L${LIBRARY_OUTPUT_PATH} ${LIBRARY_OUTPUT_PATH}/or32_crt0.o")

IF(${SD_STORAGE} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DDTV_SD1_ENABLE
    )
ENDIF()

IF(${USB_STORAGE} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DDTV_USB_ENABLE
    )
ENDIF()

IF(${TSO_MODULE} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DTSO_ENABLE
    )
ENDIF()

#external hdmirx
IF(${EXTERNAL_HDMIRX} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DEXTERNAL_HDMIRX
    )
ENDIF()

#interal hdmirx loopthrough
IF(${HDMI_LOOPTHROUGH} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DHDMI_LOOPTHROUGH
    )
ENDIF()

#ENABLE HDCP
IF(${HDCP_ON} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DHDCP_ON
    )
ENDIF()

#ENABLE External RTC
IF(${EXTERNAL_RTC} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DEXTERNAL_RTC
    )
ENDIF()

#SUPPORT_MIC_MIXED
IF(${SUPPORT_MIC_MIXED} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DSUPPORT_MIC_MIXED
    )
ENDIF()

#USE_WM8960_ADC
IF(${USE_WM8960_ADC} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DUSE_WM8960_ADC
    )
ENDIF()

#CHIP_VERSION
IF(${CHIP_VERSION} STREQUAL IT9917_176TQFP)
    ADD_DEFINITIONS(
        -DIT9917_176TQFP
    )
ELSEIF(${CHIP_VERSION} STREQUAL IT9913_128LQFP)
    ADD_DEFINITIONS(
        -DIT9913_128LQFP
    )
ELSEIF(${CHIP_VERSION} STREQUAL IT9919_144TQFP)
    ADD_DEFINITIONS(
        -DIT9919_144TQFP
    )
ENDIF()

#BOARD_MODULE
IF(${BOARD_MODULE} STREQUAL EVB_BOARD)
    ADD_DEFINITIONS(
        -DEVB_BOARD
    )
ELSEIF(${BOARD_MODULE} STREQUAL REF_BOARD_AVSENDER)
    ADD_DEFINITIONS(
        -DREF_BOARD_AVSENDER
    )
ELSEIF(${BOARD_MODULE} STREQUAL REF_BOARD_CAMERA)
    ADD_DEFINITIONS(
        -DREF_BOARD_CAMERA
    )
ENDIF()

#VGA / YPbPr
IF(${COMPONENT_DEV} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DCOMPONENT_DEV
    )
ENDIF()

#CVBS / S-Video
IF(${COMPOSITE_DEV} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DCOMPOSITE_DEV
    )
ENDIF()

#Sensor
IF(${SENSOR_DEV} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DSENSOR_DEV
    )
ENDIF()

#Sensor ID
IF(${SENSOR_ID} STREQUAL PIXELPLUS_PH1100K)
    ADD_DEFINITIONS(
        -DPIXELPLUS_PH1100K
    )
ELSEIF(${SENSOR_ID} STREQUAL IPASION_IP2986)
    ADD_DEFINITIONS(
        -DIPASION_IP2986
    )
ELSEIF(${SENSOR_ID} STREQUAL APTINA_MT9M034)
    ADD_DEFINITIONS(
        -DAPTINA_MT9M034
    )
ENDIF()

IF(${USB_DEVICE} STREQUAL ENABLE)
    IF(${CONFIG_HAVE_USBD})
        ADD_DEFINITIONS(
            -DENABLE_USB_DEVICE
            -DCONFIG_HAVE_USBD=1
        )
        IF(${CONFIG_USBD_HAVE_PCGRABBER})
            ADD_DEFINITIONS(
                -DCONFIG_USBD_HAVE_PCGRABBER=1
            )
        ELSE()
            UNSET(CONFIG_USBD_HAVE_PCGRABBER CACHE)
        ENDIF()
    ELSE()
        UNSET(CONFIG_HAVE_USBD CACHE)
        UNSET(CONFIG_USBD_HAVE_PCGRABBER CACHE)
    ENDIF()
ELSE()
    UNSET(CONFIG_HAVE_USBD CACHE)
    UNSET(CONFIG_USBD_HAVE_PCGRABBER CACHE)
#   REMOVE_DEFINITIONS(-DCONFIG_HAVE_USBD=1)
#   REMOVE_DEFINITIONS(-DCONFIG_USBD_HAVE_PCGRABBER=1)
ENDIF()

IF(${SYSTEM_FAT_TYPE} STREQUAL HAVE_FAT)
    ADD_DEFINITIONS(
        -DHAVE_FAT
    )
ENDIF()

IF(${MULTIPLE_INSTANCES} STREQUAL ENABLE)
    ADD_DEFINITIONS(
        -DMULTIPLE_INSTANCES
    )
ENDIF()